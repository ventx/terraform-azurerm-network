name: PR - Rover

on:
  pull_request:
    paths:
      - 'examples/**'
      - 'tests/**'
      - '**.tf'

jobs:
  rover:
    name: Rover
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      AWS_DEFAULT_REGION: eu-central-1
      DNS_ADDRESS: 0 # https://github.com/localstack/localstack/issues/6501
      LOCALSTACK_API_KEY: ${{ secrets.LOCALSTACK_API_KEY }}
      TFDIR: .
      TF_VAR_workspace_name: rover
      TF_VAR_subnet_ids: '["subnet-1", "subnet-2", "subnet-3"]'
      TFVER: 1.1.2 # Rover uses Terraform 1.1.2, so we need to use the same version for the plan file
    steps:
      - name: Start LocalStack
        id: localstack
        if: env.LOCALSTACK_API_KEY != 'false'
        run: |
          # Workaround: https://github.com/localstack/localstack/pull/6831
          pip install pyOpenSSL --upgrade
          pip install cryptography --upgrade
          # install LocalStack cli
          pip install localstack
          # Make sure to pull the latest version of the image
          docker pull localstack/localstack
          # Start LocalStack in the background
          localstack start -d
          # Wait 30 seconds for the LocalStack container to become ready before timing out
          echo "Waiting for LocalStack startup..."
          localstack wait -t 30
          echo "Startup complete"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Copy localstack provider to current dir
        if: env.LOCALSTACK_API_KEY != 'false'
        run: |
          cp tests/localstack.tf .

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TFVER }}

      - name: Terraform Init
        run: terraform -chdir=${{ env.TFDIR }} init

      - name: Terraform Plan
        id: plan
        run: terraform -chdir=${{ env.TFDIR }} plan -no-color -input=false -out=plan.out

      - name: Upload artifcat (plan)
        uses: actions/upload-artifact@v3
        with:
          name: plan.out
          path: ${{ env.TFDIR }}/plan.out

      - name: Convert Terraform plan to JSON
        run: |
          terraform -chdir=${{ env.TFDIR }} show -no-color -json plan.out > plan.json
          head -n -10 plan.json > tmp.txt && mv tmp.txt plan.json
          sed '1d' plan.json -i

      - name: Upload artifcat (plan JSON)
        uses: actions/upload-artifact@v3
        with:
          name: plan.json
          path: plan.json

      - name: Generate rover Terraform visualization
        uses: ventx/stackx-action-rover-terraform@v1

      - name: Upload artifcat (rover image)
        uses: actions/upload-artifact@v3
        with:
          name: rover.png
          path: ${{ env.TFDIR }}/rover.png

      - name: Upload artifcat (rover svg)
        uses: actions/upload-artifact@v3
        with:
          name: rover.svg
          path: ${{ env.TFDIR }}/rover.svg

      - name: Upload artifcat (rover zip)
        uses: actions/upload-artifact@v3
        with:
          name: rover.zip
          path: ${{ env.TFDIR }}/rover.zip
