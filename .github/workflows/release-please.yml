name: release-please

on:
  push:
    branches:
      - main

jobs:
  release-please:
    name: release-please
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      AWS_DEFAULT_REGION: eu-central-1
      DNS_ADDRESS: 0 # https://github.com/localstack/localstack/issues/6501
      LOCALSTACK_API_KEY: ${{ secrets.LOCALSTACK_API_KEY }}
      TFDIR: .
      TF_VAR_subnet_ids: '["test"]'
      TF_VAR_workspace_name: rover
      TFVER: 1.1.2 # Rover uses Terraform 1.1.2, so we need to use the same version for the plan file
    steps:
      - name: Start LocalStack
        id: localstack
        if: env.LOCALSTACK_API_KEY != 'false'
        run: |
          # Workaround: https://github.com/localstack/localstack/pull/6831
          pip install pyOpenSSL --upgrade
          pip install cryptography --upgrade
          # install LocalStack cli
          pip install localstack
          # Make sure to pull the latest version of the image
          docker pull localstack/localstack
          # Start LocalStack in the background
          localstack start -d
          # Wait 30 seconds for the LocalStack container to become ready before timing out
          echo "Waiting for LocalStack startup..."
          localstack wait -t 30
          echo "Startup complete"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Versions
        run: |
          PYTHONVER=$(grep .tool-versions -e "python" | sed "s/python \(.*\)/\1/")
          echo "PYTHONVERSION=$PYTHONVER" >> $GITHUB_ENV

      - name: Copy localstack provider to current dir
        if: env.LOCALSTACK_API_KEY != 'false'
        run: |
          cp tests/localstack.tf .

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TFVER }}

      - name: Terraform Init
        run: terraform -chdir=${{ env.TFDIR }} init

      - name: Terraform Plan
        id: plan
        run: terraform -chdir=${{ env.TFDIR }} plan -no-color -input=false -out=plan.out

      - name: stackx-action-rover-terraform
        uses: ventx/stackx-action-rover-terraform@v1

      - name: Cleanup
        id: cleanup
        run: rm -f localstack-provider.tf rover.zip

      - name: Move rover image to docs directory
        run: |
          mv ${{ env.TFDIR }}/rover.png docs/images/screenshot2.png
          mv ${{ env.TFDIR }}/rover.svg docs/images/screenshot2.svg

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHONVERSION }}

      - name: Setup Graphviz
        uses: ts-graphviz/setup-graphviz@v1

      - name: Install diagrams
        run: pip install diagrams

      - name: Generate Diagram
        id: diagram
        run: python docs/images/diagram.py

      - name: Move Diagram to docs/images directory
        run: mv screenshot1.png docs/images/screenshot1.png

      - name: stackx-action-readme
        id: readme
        uses: ventx/stackx-action-readme-templates@v1
        with:
          terraform: 'true'

      - name: terraform-docs
        uses: terraform-docs/gh-actions@v1.0.0
        with:
          working-dir: .
          output-file: README.md
          output-method: inject
          git-push: 'true'

      - name: Checkout
        uses: actions/checkout@v3

      - name: release-please
        uses: google-github-actions/release-please-action@v3
        with:
          release-type: terraform-module
          extra-files: |
            docs/README.yaml
